---
node: 00005_attrib_lib
---

```{name:"CODE", type:"text", restrict:"declaration,vshader"}
#if (__VERSION__ > 120)
# define IN in
# define OUT out
#else
# define IN attribute
# define OUT varying
#endif

```

```{name:"CODE", type:"text", restrict:"declaration,fshader"}
#if (__VERSION__ > 120)
# define IN in
# define OUT out
#else
# define IN varying
# define OUT  
#endif

```

---
node: 00010_map_texcoord_init
input: {name:"Location", type:"int"}
input: {name:"TexCoordIndex", type:"int"}
---
```{name:"CODE", type:"text", restrict:"vshader,declaration"}
/* layout ( location = $Location$ ) */ IN vec4 TexCoord$TexCoordIndex:assign$;
```

---
node: 00010_map_init
input: {name:"MapIndex", type:"int"}
input: {name:"TexCoordIndex", type:"int"}
---

```{name:"CODE", type:"text", restrict:"vshader,declaration"}
OUT vec4 vTexCoord$MapIndex:assign$;
```

```{restrict:"vshader,main"}
  vTexCoord$MapIndex:assign$ = TexCoord$TexCoordIndex:assign$;
```

```{restrict:"fshader,declaration"}
IN vec4 vTexCoord$MapIndex:assign$;
```
---
node: 00010_map_pass_init
---

```{name:"CODE", type:"text", restrict:"vshader,declaration"}
/*layout ( location = 0 ) */ IN vec4 Position;
/*layout ( location = 2 ) */ IN vec4 Normal;
/*layout ( location = 3 ) */ IN vec4 Color;
/*layout ( location = 6 ) */ IN vec4 Cotangent;
/*layout ( location = 7 ) */ IN vec4 Tangent;
OUT vec4 vNormal;
OUT vec4 vColor;
OUT vec4 vTangent;
OUT vec4 vCotangent;
OUT vec4 vPosition;
OUT vec3 cameye;
```

```{restrict:"vshader,main"}
  vec4 Displace = vec4( 0.0, 0.0, 1.0, 0.0 );
  vPosition = Position;
  vColor = Color;
  vNormal = vec4( Normal.xyz, 0 );
  vTangent = vec4( Tangent.xyz, 0 );
  vCotangent = vec4( Cotangent.xyz, 0 );
```


```{restrict:"fshader,declaration"}
IN vec4 vNormal;
IN vec4 vColor;
IN vec4 vTangent;
IN vec4 vCotangent;
IN vec4 vPosition;
IN vec3 cameye;
OUT vec4 FragColor;

uniform vec4 mat_specular;
uniform float mat_hardness;
```

```{restrict:"fshader,main"}
  vec4 Normal = vec4( 0.5, 0.5, 1, 0 );
  vec4 Color = vec4( 1 );
  vec4 Specular = mat_specular;
  float Hardness = mat_hardness;
```
